{
  "name": "@salesforce/plugin-org",
  "description": "Commands to interact with Salesforce orgs",
  "version": "2.2.22",
  "author": "Salesforce",
  "main": "lib/index.js",
  "bugs": "https://github.com/forcedotcom/cli/issues",
  "dependencies": {
    "@oclif/core": "^1.23.1",
    "@salesforce/core": "^3.32.14",
    "@salesforce/kit": "^1.8.2",
    "@salesforce/sf-plugins-core": "^1.22.1",
    "open": "8.4.0",
    "tslib": "^2"
  },
  "devDependencies": {
    "@oclif/plugin-command-snapshot": "^3.2.16",
    "@oclif/test": "^2.2.15",
    "@salesforce/cli-plugins-testkit": "^3.2.18",
    "@salesforce/dev-config": "^3.1.0",
    "@salesforce/dev-scripts": "^4.0.0-beta.3",
    "@salesforce/plugin-command-reference": "^2.2.8",
    "@salesforce/prettier-config": "^0.0.2",
    "@salesforce/ts-sinon": "1.4.2",
    "@swc/core": "^1.3.24",
    "@types/chai-as-promised": "^7.1.5",
    "@types/shelljs": "^0.8.10",
    "@typescript-eslint/eslint-plugin": "^5.42.1",
    "@typescript-eslint/parser": "^5.46.0",
    "chai": "^4.3.7",
    "chai-as-promised": "^7.1.1",
    "eslint": "^8.31.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-config-salesforce": "^1.1.0",
    "eslint-config-salesforce-license": "^0.1.6",
    "eslint-config-salesforce-typescript": "^1.1.1",
    "eslint-plugin-header": "^3.0.0",
    "eslint-plugin-import": "2.26.0",
    "eslint-plugin-jsdoc": "^39.6.4",
    "eslint-plugin-sf-plugin": "^1.6.2",
    "husky": "^7.0.4",
    "mocha": "^9.1.3",
    "moment": "^2.29.1",
    "nyc": "^15.1.0",
    "oclif": "^3.4.3",
    "prettier": "^2.8.2",
    "pretty-quick": "^3.1.0",
    "shelljs": "^0.8.5",
    "shx": "0.3.4",
    "sinon": "10.0.0",
    "ts-node": "^10.9.1",
    "typescript": "^4.9.4",
    "wireit": "^0.9.3"
  },
  "engines": {
    "node": ">=14.0.0"
  },
  "files": [
    "/lib",
    "/messages",
    "/oclif.manifest.json"
  ],
  "homepage": "https://github.com/salesforcecli/plugin-org",
  "keywords": [
    "force",
    "salesforce",
    "sfdx",
    "salesforcedx",
    "sfdx-plugin"
  ],
  "license": "BSD-3-Clause",
  "oclif": {
    "commands": "./lib/commands",
    "bin": "sfdx",
    "devPlugins": [
      "@oclif/plugin-help",
      "@oclif/plugin-command-snapshot",
      "@salesforce/plugin-command-reference"
    ],
    "topics": {
      "org": {
        "description": "manage your orgs",
        "longDescription": "Use the org commands to manage the orgs you use with Salesforce CLI. Create and delete scratch orgs, list your created and authorized orgs, and open orgs in your browser.",
        "subtopics": {
          "create": {
            "description": "create scratch orgs, sandboxes, org shapes, and org snapshots"
          },
          "resume": {
            "description": "resume an org creation that was started asynchronously, timed out, or was interrupted"
          },
          "delete": {
            "description": "delete scratch orgs, sandboxes, org shapes, and org snapshots"
          }
        }
      },
      "force": {
        "external": true,
        "subtopics": {
          "org": {
            "description": "manage your orgs",
            "longDescription": "Use the org commands to manage the orgs you use with Salesforce CLI. Create and delete scratch orgs, list your created and authorized orgs, and open orgs in your browser."
          }
        }
      }
    }
  },
  "repository": "salesforcecli/plugin-org",
  "scripts": {
    "build": "wireit",
    "clean": "sf-clean",
    "clean-all": "sf-clean all",
    "clean:lib": "shx rm -rf lib && shx rm -rf coverage && shx rm -rf .nyc_output && shx rm -f oclif.manifest.json",
    "compile": "wireit",
    "docs": "sf-docs",
    "format": "wireit",
    "lint": "wireit",
    "postpack": "shx rm -f oclif.manifest.json",
    "prepack": "sf-prepack",
    "prepare": "sf-install",
    "test": "wireit",
    "test-compile": "wireit",
    "test-only": "wireit",
    "test:command-reference": "wireit",
    "test:deprecation-policy": "wireit",
    "test:json-schema": "wireit",
    "test:nuts": "nyc mocha \"**/*.nut.ts\" --slow 4500 --timeout 1200000 --parallel",
    "test:nuts:sandbox": "nyc mocha \"**/*.sandboxNut.ts\" --slow 450000 --timeout 7200000",
    "test:one": "wireit",
    "test:watch": "mocha --watch \"./test/**/*.test.ts\"",
    "version": "oclif readme"
  },
  "publishConfig": {
    "access": "public"
  },
  "wireit": {
    "build": {
      "dependencies": [
        "compile",
        "lint"
      ]
    },
    "compile": {
      "command": "tsc --build --pretty ",
      "files": [
        "src/**/*.ts",
        "tsconfig.json"
      ],
      "output": [
        "lib/**",
        "*.tsbuildinfo"
      ],
      "clean": "if-file-deleted"
    },
    "format": {
      "command": "prettier --write \"+(src|test|schemas)/**/*.+(ts|js|json)|command-snapshot.json\""
    },
    "lint": {
      "command": "eslint --color --cache --cache-location .eslintcache",
      "files": [
        "src/**/*.ts",
        "test/**/*.ts",
        ".eslintignore",
        ".eslintrc.js"
      ],
      "output": []
    },
    "test-compile": {
      "command": "tsc -p ./test --pretty",
      "files": [
        "test/**/*.ts",
        "tsconfig.json",
        "test/tsconfig.json"
      ],
      "output": []
    },
    "test:one": {
      "command": "mocha"
    },
    "test": {
      "dependencies": [
        "test-only",
        "test:command-reference",
        "test:deprecation-policy",
        "lint",
        "test:json-schema",
        "test-compile"
      ]
    },
    "test-only": {
      "command": "nyc mocha test/**/*.test.ts",
      "files": [
        "test/**/*.ts",
        "src/**/*.ts",
        "tsconfig.json",
        "test/tsconfig.json"
      ],
      "output": []
    },
    "test:command-reference": {
      "command": "\"./bin/dev\" commandreference:generate --erroronwarnings",
      "files": [
        "src/**/*.ts",
        "messages"
      ],
      "output": [
        "tmp/root"
      ]
    },
    "test:deprecation-policy": {
      "command": "\"./bin/dev\" snapshot:compare",
      "files": [
        "src/**/*.ts"
      ],
      "output": [],
      "dependencies": [
        "compile"
      ]
    },
    "test:json-schema": {
      "command": "\"./bin/dev\" schema:compare",
      "files": [
        "src/**/*.ts",
        "schemas"
      ]
    }
  }
}
